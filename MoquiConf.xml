<?xml version="1.0" encoding="UTF-8" ?>
<moqui-conf xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/moqui-conf-2.0.xsd">
    <webapp-list>
        <webapp name="webroot" https-enabled="false" require-session-token="false">
            <after-startup><actions>
                <script><![CDATA[
    import org.moqui.resource.ResourceReference
    String reactSSRStaticPath = "component://moqui-react-ssr/screen/ReactSSRRoot/static"
    Map<String, Map<String, Object>> jsSSRFileMap = new LinkedHashMap<>()
    jsSSRFileMap.put('nashorn-polyfill',[ runOnce: true,
              resourceReference: ec.resource.getLocationReference("${reactSSRStaticPath}/nashorn-polyfill.js") ])
    jsSSRFileMap.put('nashorn-eventloop', [ runOnce: true,
            resourceReference: ec.resource.getLocationReference("${reactSSRStaticPath}/nashorn-eventloop.js") ])
    jsSSRFileMap.put('vendor', [ runOnce: true, resourceReference: null ])

    jsSSRFileMap.put('pre-app', [ runOnce: true,
            resourceReference: ec.resource.getLocationReference("${reactSSRStaticPath}/pre-app.js") ])
    jsSSRFileMap.put('app', [ runOnce: false, resourceReference: null ])
    jsSSRFileMap.put('post-app', [ runOnce: false,
            resourceReference: ec.resource.getLocationReference("${reactSSRStaticPath}/post-app.js") ])

    Map<String, ResourceReference> jsBrowserFileMap = new LinkedHashMap<>()
    jsBrowserFileMap.put('vendor', null)
    jsBrowserFileMap.put('app', null)

    Map<String, ResourceReference> cssFileMap = new LinkedHashMap<>()
    cssFileMap.put('app', null)

    ResourceReference rr = ec.resource.getLocationReference("component://moqui-react-ssr-demo/screen/ReactSSRRoot/dist_ssr")
    for (ResourceReference fileRr in rr.getDirectoryEntries()) {
        if (!fileRr.isFile()) continue
        String fileName = fileRr.getFileName()
        if (fileName.endsWith(".js")) {
            if (fileName.startsWith("vendor.")) jsSSRFileMap["vendor"].resourceReference = fileRr
            if (fileName.startsWith("app.")) jsSSRFileMap["app"].resourceReference = fileRr
        }
    }


    rr = ec.resource.getLocationReference("component://moqui-react-ssr-demo/screen/ReactSSRRoot/dist")
    for (ResourceReference fileRr in rr.getDirectoryEntries()) {
        if (!fileRr.isFile()) continue
        String fileName = fileRr.getFileName()
        if (fileName.endsWith(".js")) {
            if (fileName.startsWith("vendor.")) jsBrowserFileMap["vendor"] = fileRr
            if (fileName.startsWith("app.")) jsBrowserFileMap["app"] = fileRr
        } else if (fileName.endsWith(".css")) {
            if (fileName.startsWith("app.")) cssFileMap["app"] = fileRr
        }
    }

    def reactAppCache = ec.cache.getCache('react.ssr.apps.ReactSSRDemo')

    reactAppCache.put('jsSSRFileMap', jsSSRFileMap)
    reactAppCache.put('jsBrowserFileMap', jsBrowserFileMap)
    reactAppCache.put('cssFileMap', cssFileMap)
                ]]></script>
            </actions></after-startup>
        </webapp>
    </webapp-list>

    <cache-list warm-on-start="false">
        <cache name="react.ssr.apps.ReactSSRDemo" value-type="Map"/>
    </cache-list>
</moqui-conf>